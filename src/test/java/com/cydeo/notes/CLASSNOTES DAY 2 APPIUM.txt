CLASSNOTES: DAY 2 APPIUM

Friday, 05/20/2022
------------------

Mobile Applications test Automation using Appium:

Appium is open source tool for automation of mobile applications.
Cross platform: Android, iOS, Windows
Support multiple languages: Java, C#, javascript etc
Different app types: native, web, hybrid

We can test using:
    real mobile devices
    Virtual devices

Advantages Real mobile devices:
    - has camera, sound
    - we can test low battery

But we cannot have all devices and operating systems with us. 
So Virtual devices are flexible, and we can simulate different mobile devices and operating systems.

--------

Lets your company does not want you to use any Virtual devices, how can we test with as many devices as possible:

-> browser stack or saucelabs can be used for real device testing and automation.
-> they are paid services, a company needs an account
--------

Virtual devices:
    -> XCODE -> iOS Virtual devices
    -> Android studio -> Android Virtual devices

Appium Server -> takes our commands and runs the steps in mobile application

Appium Client -> we write our automation code using a driver.

--------
Appium Inspector -> helps with inspecting elements, locators in native mobile applications.
-> we can also do record and playback

--------
Similar to Selenium IDE, Appium inspector can also record the user actions on the application and generate java code steps like below.

MobileElement el3 = (MobileElement) driver.findElementById("com.google.android.calculator:id/digit_1");
el3.click();

MobileElement el4 = (MobileElement) driver.findElementByAccessibilityId("plus");
el4.click();

MobileElement el5 = (MobileElement) driver.findElementById("com.google.android.calculator:id/digit_5");
el5.click();

MobileElement el6 = (MobileElement) driver.findElementByAccessibilityId("equals");
el6.click();

However, generally, record and playback feature in automation is not a good way of automating tests.

It is always better to write your code in your framework and make it reusable and maintainable.

--------

Using Appium to Automate a browser in the mobile device. Like chrome, safari, firefox etc

-> download chromedriver binary and store in our project

-> copy absolute path to the chromedriver file and provide it in the settings of Appium server

/Users/cybertekb24/IdeaProjects/AppiumAutomationB25/chromedriver

-> launch appium server, goto advanced settings, and enter path to chromedriver binary

-> start appium server

-> now we can write code to open Chrome browser and step on our mobile device.

-> new class EtsyChromeTest
    URL url = new URL("http://localhost:4723/wd/hub");
    WebDriver driver = new RemoteWebDriver(url, desiredCapabilities);


<span>27,574 results,</span>

//span[contains(text(),'results')]

app -> chrome
    -> firefox
    -> point to any mobile device

Framework: => UI, API, DB, 
Framework: => MOBILE APP tests

If it is one project/app , you could have single framework to automate UI(WebDriver), API(RestAssured), Database(JDBC), APPIUM

But if mobile app is native and you have to do lots of different devices, like IOS, Android etc, maybe it is better to keep APPIUM project separate.

I do not think it is good idea to have single Framework/Single maven project for multiple different APPlications.

APP1 -> Framework1
APP2 -> Framework2

You could have some common project that both frameworks use as dependency.

================================

Set up:
    -> set up virtual devices using Android studio or XCode
    -> Install and launch Appium server
    -> Add appium client for java into pom.xml as dependency

Framework:
    -> I specify device type, model , application as DesiredCapabilities.
    Android:
        AppiumDriver ->  AndroidDriver
    IOS:
        AppiumDriver ->  IOSDriver
    WEB:
        WebDriver -> RemoteWebDriver
    
The rest of the framework is the same as cucumber selenium framework.

POM Design -> to make code reusable, and maintainable, readable
Cucumber BDD feature files for mobile app testing
Assertions using junit
TestData -> configuration.properties, excel etc
Report -> cucumber reports plugin

-------------

I specialize in testing and automation of different layers of applications. like UI tests for web and mobile applications using selenium and appium
API testing using restAssured
Database using java jdbc

Test type with appium:
    Functional testing, positive and negative testing.
    Smoke tests for mobile apps in different platforms like android/ios etc.
    Regression tests at end of sprint and before prod release,
    that time you can execute all your tests including mobile

    For local development, we can set up android studio, xcode for virtual devices, app server in localhost while developing automation code.
    Once it is completed we should be able to run the tests in CI/CD jenkins jobs.

    2 options:
        -> set up cloud server with virtual devices, appium server
        -> use services like browserstack or saucelabs
============================================================



